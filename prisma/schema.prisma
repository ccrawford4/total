generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  accounts  Account[]
  items     Item[]    @relation("UserItems")
}

model Item {
  id              String    @id @default(uuid())
  userId          String
  itemId          String
  accessToken     String
  institutionName String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  accounts        Account[] @relation("ItemAccounts")
  user            User      @relation("UserItems", fields: [userId], references: [id])
}

model Account {
  id           String        @id @default(uuid())
  itemId       String
  name         String?
  officialName String
  mask         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  userId       String
  item         Item          @relation("ItemAccounts", fields: [itemId], references: [id])
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[] @relation("AccountTransactions")
}

model Transaction {
  id            String   @id @default(uuid())
  transactionId String   @unique
  accountId     String
  currencyCode  String
  amount        Decimal
  date          DateTime @default(now())
  name          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  pending       Boolean
  account       Account  @relation("AccountTransactions", fields: [accountId], references: [id])
}
